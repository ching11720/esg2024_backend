# If want to test db, just need to mark the backend and frontend part as comment

version: "3.8"

services:
  #backend:
   # container_name: backend
    #build: 
     # context: ./backend
      #dockerfile: Dockerfile
    #links:
     # - db
    #ports:
     # - 8000:5000
    #networks:
     # - esg_network

  #frontend:
   # image: frontend
    #ports:
     # - "3000:3000"

  db:
    container_name: mysqldb
    build: 
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    stdin_open: true
    tty: true
    restart: always
    working_dir: /var/lib/mysql
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - 3307:3307
    volumes:
      - ESG_db:/var/lib/mysql
      #- ./my.cnf:/etc/mysql/conf.d/my.cnf
    environment: 
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: 'ESG_db'
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_TCP_PORT: 3307
    #environment:
     # MYSQL_DATABASE: 'ESG_db'
      # So you don't have to use root, but you can if you like
      #MYSQL_USER: 'user'
      # You can use whatever password you like
      #MYSQL_PASSWORD: 'carbon2024'
      # Password for root access
      #MYSQL_ROOT_PASSWORD: 'carbon2024'
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u${MYSQL_USER} -p${MYSQL_PASSWORD} && mysql -u${MYSQL_USER} -p${MYSQL_PASSWORD} -e 'show databases;'"]
      timeout: 25s
      retries: 10
    networks:
      - esg_network
  
  #nginx:
   # image: nginx
    #restart: always
   # ports:
    #  - "80:80"
   # volumes:
    #  - ./nginx.conf:/etc/nginx/conf.d/default.conf
   # networks:
    #  - esg_network
   # depends_on:
    #  - backend

volumes:
  ESG_db:

networks:
  esg_network: