# If want to test db, just need to mark the backend and frontend part as comment

version: "3.8"

services:
  # backend:
  #   container_name: backend
  #   build: 
  #     context: ./carbon
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8000:8000"
  #   env_file:
  #     - .env
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   networks:
      # - esg_network
  
  # rabbitmq:
  #   image: rabbitmq:3.10.5-management
  #   container_name: rabbitmq
  #   restart: unless-stopped
  #   hostname: my-rabbit
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   expose:
  #     - "5672"
  #   environment:
  #     RABBITMQ_DEFAULT_VHOST: my_vhost
  #     RABBITMQ_DEFAULT_USER: ${RMQ_USER}
  #     RABBITMQ_DEFAULT_PASS: ${RMQ_PASSWORD}
  #   networks:
  #     - esg_network

  #frontend:
   # image: frontend
    #ports:
     # - "3000:3000"

  db:
    container_name: mysqldb
    build: 
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    stdin_open: true
    tty: true
    restart: always
    working_dir: /var/lib/mysql
    command: --bind-address=0.0.0.0
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - 3307:3306
    volumes:
      - ESG_db:/var/lib/mysql
      #- ./my.cnf:/etc/mysql/conf.d/my.cnf
    environment: 
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: 'ESG_db'
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u${MYSQL_USER} -p${MYSQL_PASSWORD} && mysql -u${MYSQL_USER} -p${MYSQL_PASSWORD} -e 'show databases;'"]
      timeout: 25s
      retries: 10
    networks:
      - esg_network
  
  #nginx:
   # image: nginx
    #restart: always
   # ports:
    #  - "80:80"
   # volumes:
    #  - ./nginx.conf:/etc/nginx/conf.d/default.conf
   # networks:
    #  - esg_network
   # depends_on:
    #  - backend

volumes:
  ESG_db:

networks:
  esg_network: